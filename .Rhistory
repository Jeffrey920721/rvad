1/length(weight)
(ht.out[i] - mean(ht[sub]))^2
sqrt(1 + 1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
spd_grid_sd <- 1.96*sd(fit$residuals)*sqrt(1 + 1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
spd_grid_sd
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = spd[sub],
w = weight)
spd_grid[i] <- fit$coefficients[[1]] + fit$coefficients[[2]]*ht.out[i]
spd_grid_sd[i] <- 1.96*sd(fit$residuals)*sqrt(1 + 1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
data.frame(spd_grid = spd_grid, spd_gird_sd = spd_grid_sd, ht = ht.out)
library(ggplot2)
library(magrittr)
data.frame(spd_grid = spd_grid, spd_gird_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line()
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_gri - spd_grid_sd, ymax = spd + spd_grid_sd))
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd))
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1)
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd))
t_val <- qt(0.975, length(weight) -2, lower.tail = FALSE)
t_val
t_val <- qt(0.025, length(weight) -2, lower.tail = FALSE)
t_val
t_val <- qt(0.025, 100, lower.tail = FALSE)
t_val
t_val <- qt(0.05, 100, lower.tail = FALSE)
t_val
t_val <- qt(0.05/2, 100, lower.tail = FALSE)
t_val
t_val <- qt(0.05/2, length(weight) - 2, lower.tail = FALSE)
t_val
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = spd[sub],
w = weight)
spd_grid[i] <- fit$coefficients[[1]] + fit$coefficients[[2]]*ht.out[i]
t_val <- qt(0.05/2, length(weight) - 2, lower.tail = FALSE)
spd_grid_sd[i] <- t_val*sd(fit$residuals)*sqrt(1 + 1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
library(ggplot2)
library(magrittr)
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd))
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = spd[sub],
w = weight)
spd_grid[i] <- fit$coefficients[[1]] + fit$coefficients[[2]]*ht.out[i]
t_val <- qt(0.1/2, length(weight) - 2, lower.tail = FALSE)
spd_grid_sd[i] <- t_val*sd(fit$residuals)*sqrt(1 + 1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
library(ggplot2)
library(magrittr)
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd))
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd)) +
geom_smooth(data = data = data.frame(ht = ht, spd_grid = spd),
span = 0.1)
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd)) +
geom_smooth(data = data.frame(ht = ht, spd_grid = spd),
span = 0.1)
fit
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = spd[sub],
w = weight)
spd_grid[i] <- fit$coefficients[[1]] + fit$coefficients[[2]]*ht.out[i]
t_val <- qt(0.1/2, length(weight) - 2, lower.tail = FALSE)
spd_grid_sd[i] <- t_val*sd(fit$residuals)*sqrt(1 + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd)) +
geom_smooth(data = data.frame(ht = ht, spd_grid = spd),
span = 0.1)
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = spd[sub],
w = weight)
spd_grid[i] <- fit$coefficients[[1]] + fit$coefficients[[2]]*ht.out[i]
t_val <- qt(0.1/2, length(weight) - 2, lower.tail = FALSE)
spd_grid_sd[i] <- t_val*sd(fit$residuals)*sqrt(1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd)) +
geom_smooth(data = data.frame(ht = ht, spd_grid = spd),
span = 0.1)
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd))
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = spd[sub],
w = weight)
spd_grid[i] <- fit$coefficients[[1]] + fit$coefficients[[2]]*ht.out[i]
t_val <- qt(0.05/2, length(weight) - 2, lower.tail = FALSE)
spd_grid_sd[i] <- t_val*sd(fit$residuals)*sqrt(1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd))
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd)) +
geom_smooth(data = data.frame(ht = ht, spd_grid = spd),
span = 0.1)
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - spd_grid_sd, ymax = spd_grid + spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd))
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - 2*spd_grid_sd, ymax = spd_grid + 2*spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd))
width <- 50
separation <- 10
has_data <- !is.na(spd)
spd <- spd[has_data]
ht <- ht[has_data]
range <- range[has_data]
rmse <- rmse[has_data]
# todo: chequear que la grilla tenga sentido
half_separation <- separation/2
half_width <- width/2
if (is.null(ht.out)) {
ht.out <- seq(min(ht) + half_separation,
max(ht) - half_separation,
by = separation)
}
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
has_data <- !is.na(spd)
spd <- spd[has_data]
ht <- ht[has_data]
range <- range[has_data]
rmse <- rmse[has_data]
# todo: chequear que la grilla tenga sentido
half_separation <- separation/2
half_width <- width/2
if (is.null(ht.out)) {
ht.out <- seq(min(ht) + half_separation,
max(ht) - half_separation,
by = separation)
}
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = spd[sub],
w = weight)
spd_grid[i] <- fit$coefficients[[1]] + fit$coefficients[[2]]*ht.out[i]
t_val <- qt(0.05/2, length(weight) - 2, lower.tail = FALSE)
spd_grid_sd[i] <- t_val*sd(fit$residuals)*sqrt(1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - 2*spd_grid_sd, ymax = spd_grid + 2*spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd))
width
width <- 100
separation
separation <- 10
ht.out <- NULL
has_data <- !is.na(spd)
spd <- spd[has_data]
ht <- ht[has_data]
range <- range[has_data]
rmse <- rmse[has_data]
# todo: chequear que la grilla tenga sentido
half_separation <- separation/2
half_width <- width/2
if (is.null(ht.out)) {
ht.out <- seq(min(ht) + half_separation,
max(ht) - half_separation,
by = separation)
}
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = spd[sub],
w = weight)
spd_grid[i] <- fit$coefficients[[1]] + fit$coefficients[[2]]*ht.out[i]
t_val <- qt(0.05/2, length(weight) - 2, lower.tail = FALSE)
spd_grid_sd[i] <- t_val*sd(fit$residuals)*sqrt(1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - 2*spd_grid_sd, ymax = spd_grid + 2*spd_grid_sd),
alpha = 0.1) +
geom_point(data = data.frame(ht = ht, spd_grid = spd))
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - 2*spd_grid_sd, ymax = spd_grid + 2*spd_grid_sd),
alpha = 0.1)
width
separation
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_point(data = data.frame(ht = ht, spd_grid = spd)) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - 2*spd_grid_sd, ymax = spd_grid + 2*spd_grid_sd),
alpha = 0.1)
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_point(data = data.frame(ht = ht, spd_grid = spd), size = 0.1) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - 2*spd_grid_sd, ymax = spd_grid + 2*spd_grid_sd),
alpha = 0.1)
has_data <- !is.na(spd)
spd <- spd[has_data]
ht <- ht[has_data]
range <- range[has_data]
rmse <- rmse[has_data]
# todo: chequear que la grilla tenga sentido
half_separation <- separation/2
half_width <- width/2
if (is.null(ht.out)) {
ht.out <- seq(min(ht) + half_separation,
max(ht) - half_separation,
by = separation)
}
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub], ht[sub]^2),
y = spd[sub],
w = weight)
spd_grid[i] <- fit$coefficients[[1]] + fit$coefficients[[2]]*ht.out[i] + fit$coefficients[[3]]*ht.out[i]^2
t_val <- qt(0.05/2, length(weight) - 2, lower.tail = FALSE)
spd_grid_sd[i] <- t_val*sd(fit$residuals)*sqrt(1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_point(data = data.frame(ht = ht, spd_grid = spd), size = 0.1) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - 2*spd_grid_sd, ymax = spd_grid + 2*spd_grid_sd),
alpha = 0.1)
width
has_data <- !is.na(spd)
spd <- spd[has_data]
ht <- ht[has_data]
range <- range[has_data]
rmse <- rmse[has_data]
# todo: chequear que la grilla tenga sentido
half_separation <- separation/2
half_width <- width/2
if (is.null(ht.out)) {
ht.out <- seq(min(ht) + half_separation,
max(ht) - half_separation,
by = separation)
}
spd_grid <- rep(0, length = length(ht.out))
spd_grid_sd <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = spd[sub],
w = weight)
spd_grid[i] <- fit$coefficients[[1]] + fit$coefficients[[2]]*ht.out[i]
t_val <- qt(0.05/2, length(weight) - 2, lower.tail = FALSE)
spd_grid_sd[i] <- t_val*sd(fit$residuals)*sqrt(1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_point(data = data.frame(ht = ht, spd_grid = spd), size = 0.1) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - 2*spd_grid_sd, ymax = spd_grid + 2*spd_grid_sd),
alpha = 0.1)
predict(fit)
data.frame(spd_grid = spd_grid, spd_grid_sd = spd_grid_sd, ht = ht.out) %>%
ggplot(aes(ht, spd_grid)) +
geom_point(data = data.frame(ht = ht, spd_grid = spd), size = 0.1) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - 3*spd_grid_sd, ymax = spd_grid + 3*spd_grid_sd),
alpha = 0.1)
devtools::load_all(".")
plot.data.frame
devtools::load_all(".")
plot(vad)
vad <- with(radar , VAD(Vda, azimuth, range, elevation))
plot(vad)
devtools::load_all(".")
ggplot(vad[complete.cases(vad), ], aes(height, speed)) +
geom_point(aes(color = r2)) +
geom_smooth(aes(weight = 1/rmse), span = 0.1) +
coord_flip()
vad <- with(radar , VAD(Vda, azimuth, range, elevation))
plot(vad)
devtools::load_all(".")
plot(vad)
plot(vad) + facet_wrap(~elev_ang)
v <- u
v <- spd
u <- spd
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = cbind(u[sub], v[sub]),
w = weight)
fit
v_sd <- u_sd <- v_grid <- u_grid <- rep(0, length = length(ht.out))
fit$coefficients
fit$coefficients[[1]]
fit$coefficients
fit$coefficients[1, 1]
u_grid[i] <- fit$coefficients[1, 1] + fit$coefficients[2, 1]*ht.out[i]
v_grid[i] <- fit$coefficients[1, 2] + fit$coefficients[2, 2]*ht.out[i]
fit$residuals
u_sd[i] <- sd(fit$residuals[1, ])*sqrt(1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
us_sd
u_sd
sd(fit$residuals[1, ])
fit$residuals[1, ]
u_sd[i] <- sd(fit$residuals[, 1])*sqrt(1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
u_sd
devtools::load_all(".")
has_data <- !is.na(u)
u <- u[has_data]
ht <- ht[has_data]
range <- range[has_data]
rmse <- rmse[has_data]
# todo: chequear que la grilla tenga sentido
half_separation <- separation/2
half_width <- width/2
if (is.null(ht.out)) {
ht.out <- seq(min(ht) + half_separation,
max(ht) - half_separation,
by = separation)
}
v_sd <- u_sd <- v_grid <- u_grid <- rep(0, length = length(ht.out))
for (i in seq_along(ht.out)) {
sub <- ht >= (ht.out[i] - half_width) & ht <= (ht.out[i] + half_width)
weight_ht <- (1 - abs(ht[sub] - ht.out[i])^3/half_width^3)^3
# weight_ht <- weight_ht/max(weight_ht)
weight_rmse <- 1/(rmse[sub]) / max(1/rmse[sub])
weight_range <- 1/(range[sub]) / max(1/range[sub])
weight <- weight_rmse + weight_range + weight_ht
weight <- weight/sum(weight)
fit <- lm.wfit(x = cbind(1, ht[sub]),
y = cbind(u[sub], v[sub]),
w = weight)
u_grid[i] <- fit$coefficients[1, 1] + fit$coefficients[2, 1]*ht.out[i]
v_grid[i] <- fit$coefficients[1, 2] + fit$coefficients[2, 2]*ht.out[i]
t_val <- qt(0.05/2, length(weight) - 2, lower.tail = FALSE)
u_sd[i] <- sd(fit$residuals[, 1])*sqrt(1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
v_sd[i] <- sd(fit$residuals[, 2])*sqrt(1/length(weight) + (ht.out[i] - mean(ht[sub]))^2/sum((ht[sub] - mean(ht[sub]))^2))
}
data.frame(height = ht.out,
u  = u_grid,
v  = v_grid,
u_se = u_sd,
v_sd = v_sd)
vad_grid <- data.frame(height = ht.out,
u  = u_grid,
v  = v_grid,
u_se = u_sd,
v_sd = v_sd)
vad_grid %>%
ggplot(aes(ht, u)) +
geom_point(data = data.frame(ht = ht, spd_grid = spd), size = 0.1) +
geom_line() +
geom_ribbon(aes(ymin = spd_grid - 3*spd_grid_sd, ymax = spd_grid + 3*spd_grid_sd),
alpha = 0.1)
vad_grid %>%
ggplot(aes(ht, u)) +
geom_point()
vad_grid
vad_grid %>%
ggplot(aes(height, u)) +
geom_point()
str(vad)
install.packages(c("htmlunitjars", "htmlunit"), repos = "https://cinc.rud.is")
